local testing = require('testing')('vfs')
local vfs = require('vfs')
local fs = require('fs')
local assert = require('assert')
local buffer = require('buffer')
local zip = require('zip')

testing("we shall be standing in srcdir for the other tests to work", function()
   assert(fs.is_dir('testdata'))
   assert(fs.is_reg('vfs_test.lua'))
end)

testing("Root", function()
   local root = vfs.Root()
   assert(not root:exists('arborescence.jpg'))
   root:mount('testdata')
   assert(root:exists('arborescence.jpg'))
   assert.equals(root:readfile('arborescence.jpg'), fs.readfile('testdata/arborescence.jpg'))
   root:mount('.', 'src')
   assert.equals(root:readfile('arborescence.jpg'), fs.readfile('testdata/arborescence.jpg'))
   assert.equals(root:readfile('src/vfs_test.lua'), fs.readfile('./vfs_test.lua'))

   -- vfs readfile returns a buffer
   assert(buffer.is_buffer(root:readfile('arborescence.jpg')))
   root:close()
end)

testing("default Root instance", function()
   -- calls on vfs itself are proxied to a default Root instance
   vfs.mount('testdata', 'assets')
   assert(not vfs.exists('arborescence.jpg'))
   assert(not vfs.exists('testdata/arborescence.jpg'))
   assert(vfs.exists('assets/arborescence.jpg'))
   assert.equals(vfs.readfile('assets/arborescence.jpg'), fs.readfile('testdata/arborescence.jpg'))
end)

testing("mounting subdirectories into subdirectories", function()
   local root = vfs.Root()
   root:mount('testdata', 'x/y')
   root:mount('testdata/sub', 'x/z')
   assert(root:exists('x/y/arborescence.jpg'))
   assert(root:exists('x/z/HighHopes.txt'))
   root:close()
end)

testing("mounting several subdirs to the same path", function()
   local root = vfs.Root()
   root:mount('testdata', 'assets')
   root:mount('testdata/sub', 'assets')
   assert(root:exists('assets/arborescence.jpg'))
   assert(root:exists('assets/HighHopes.txt'))
   root:close()
end)

testing("mounting to the root path", function()
   local root = vfs.Root()
   root:mount('testdata/sub')
   root:mount('testdata')
   assert(root:exists('HighHopes.txt'))
   assert(root:exists('arborescence.jpg'))
   root:close()
end)

testing:with_tmpdir("mounting a zip file", function(ctx)
   local zip_path = fs.join(ctx.tmpdir, 'data.zip')
   local zf = zip.open(zip_path)
   zf:add('some/path/arborescence.jpg', fs.open('testdata/arborescence.jpg'))
   zf:add('other/path/wisdom.txt', fs.open('testdata/sub/HighHopes.txt'))
   zf:close()

   local root = vfs.Root()
   root:mount(zip_path)
   assert(root:exists('some/path/arborescence.jpg'))
   assert.equals(root:readfile('some/path/arborescence.jpg'), fs.readfile('testdata/arborescence.jpg'))
   assert(root:exists('other/path/wisdom.txt'))
   assert.equals(root:readfile('other/path/wisdom.txt'), fs.readfile('testdata/sub/HighHopes.txt'))
   root:close()
end)
